CREATE TABLE IF NOT EXISTS CATEGOREY(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(100) NOT NULL
  -- OTHER FIELDS MAY APPLY ACCORDING TO THE REQIREMENTS
);
CREATE TABLE IF NOT EXISTS SPECIFICATION(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  -- OTHER FIELDS MAY APPLY ACCORDING TO THE REQIREMENTS
  NAME VARCHAR(100) NOT NULL
);
CREATE TABLE IF NOT EXISTS USERS(
  ID INT
  -- OTHER FIELDS MAY APPLY ACCORDING TO THE REQIREMENTS
);
CREATE TABLE IF NOT EXISTS PRODUCT(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(100),
  SPECID INT,
  CATEGOREYID INT,
  -- OTHER FIELDS MAY APPLY ACCORDING TO THE REQIREMENTS
  FOREIGN KEY (SPECID) REFERENCES SPECIFICATION(ID),
  FOREIGN KEY (CATEGOREYID) REFERENCES CATEGOREY(ID)
  
);
CREATE TABLE IF NOT EXISTS POST(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  USERID INT NOT NULL,
  PRODUCTID INT NOT NULL,
  POSTDATE DATE,
);
CREATE TABLE IF NOT EXISTS POST_DETAIL(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  POSTID INT NOT NULL,
  PRODUCTID INT NOT NULL,
  QUANTITY INT,
  PRICE FLOAT NOT NULL,
  MOVEDTOWAREHOUSE INT,
  FOREIGN KEY (POSTID) REFERENCES POST(ID),
  FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT(ID)
  
);
CREATE TABLE IF NOT EXISTS WAREHOUSE(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50)
);
CREATE TABLE IF NOT EXISTS WAREHOUSE_DETAIL(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50),
  POSTDETAILID INT,
  WAREHOUSEID INT NOT NULL,
  QUANTITY INT NOT NULL,
  BATCHNO VARCHAR(15),
  MFGDATE DATE NOT NULL,
  BBFDATE DATE NOT NULL,
  SALEPRICE FLOAT,
  FOREIGN KEY(POSTDETAILEID) REFERENCES POST_DETAIL(ID),
  FOREIGN KEY(WAREHOUSEID) REFERENCES WAREHOUSE(ID)
);
CREATE TABLE IF NOT EXISTS SALE(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  SALEDATE DATE NOT NULL,
  USERID INT NOT NULL,
  FOREIGN KEY (USERID) REFERENCES USERS(ID)
);
CREATE TABLE IF NOT EXISTS SALE_DETAIL(
  ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  SALEID INT NOT NULL,
  WAREHOUSEDETAILID INT NOT NULL,
  QUANTITY INT NOT NULL,  
  FOREIGN KEY(WAREHOUSEDETAILID) REFERENCES WAREHOUSE_DETAIL(ID),
  FOREIGN KEY(SALEID) REFERENCES SALE(ID)
);



